//:[ToC](00-00_toc) | [Tips and Tricks](900-00-tips_and_tricks) | [Previous](@previous) | [Next](@next)
//:> ## Mutation

/*:
Dla kogo≈õ kto przyby≈Ç ze swiata Objective C mutowalno≈õƒá (czy te≈º to czy dany obiekt mo≈ºe siƒô zmieniaƒá czy nie) jest powiƒÖzana z parami klas np. NAArray i NSMutableArray. W Swifcie jest du≈ºo pro≈õciej. To czy co≈õ jest zmienne czy nie zale≈ºy tylko od tego czy zosta≈Ço zadeklaorowane przy u≈ºyciu s≈Çowa **_let_** czy **_var_**.
*/

import Foundation

var przywitanie = "Witaj placu zabaw!"
przywitanie = "Witaj swiecie"

let thereBe = "üí°"
//: Po odkomentowaniu kodu ni≈ºej w konsoli pojawi siƒô komunikat
//:> error: cannot assign to value: 'thereBe' is a 'let' constant thereBe = "üí•" ...: note: change 'let' to 'var' to make it mutable
// thereBe = "üí•"

var tablica = ["üí°", "üí•"]
tablica.append("üç∞")

let coSieStaloToSieNieOdstnie = ["üí°", "üí•"]
//: Ponownie kompilacja siƒô nie uda
//:> error: cannot use mutating member on immutable value: 'coSieStaloToSieNieOdstnie' is a 'let' constant coSieStaloToSieNieOdstnie.append("üç∞") ... note: change 'let' to 'var' to make it mutable
//coSieStaloToSieNieOdstnie.append("üç∞")

//:[ToC](00-00_toc) | [Tips and Tricks](900-00-tips_and_tricks) | [Previous](@previous) | [Next](@next)
